== 위크맵 ==

맵의 경우, 객체를 키로 사용했을 때 맵이 메모리에 있는 한
객체를 참조하는 것이 없더라도 가비지 컬렉터의 대상이 되지 않는다.

위크맵을 사용하면 키로 쓰인 객체를 참조하는 것이 없는 경우 가비지 컬렉터의 대상이 된다.

위크맵의 키는 반드시 객체여야 한다.

위크맵은 반복작업과 keys(), values(), entries() 메서드를 지원하지 않는다.
 [ 위크맵이 지원하는 메서드 ]
weakMap.get(key)
weakMap.set(key, value)
weakMap.delete(key)
weakMap.has(key)

== 위크맵 유스 케이스 ==
 - 부차적인 데이터를 저장할 곳이 필요할 때
 - 캐싱이 필요할 때


== 위크셋 ==
셋과 유사하지만 객체만 저장할 수 있다.
add, has, delete 를 사용할 수 있고, size, key()나 반복 작업 관련 메서드는 사용할 수 없다.

위크맵과 유사하게 부차적인 데이터를 저장할 때 사용할 수 있지만,
위크맵처럼 복잡한 데이터가 아닌 true, false 같은 간단한 데이터 용도로 사용된다.



== 요약: 위크맵과 위크셋의 활용 ==
객체엔 ‘주요’ 자료를, 위크맵과 위크셋엔 ‘부수적인’ 자료를 저장하는 형태로 위크맵과 위크셋을 활용할 수 있습니다. 객체가 메모리에서 삭제되면, (그리고 오로지 위크맵과 위크셋의 키만 해당 객체를 참조하고 있다면) 위크맵이나 위크셋에 저장된 연관 자료들 역시 메모리에서 자동으로 삭제됩니다.